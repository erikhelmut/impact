- save data as HDF5 file

- use trajectory for input (sollsignal)
- also clip the jumps (update of the reference value)
- try to use I gain?
- error below .3N should be fine

- controller sollte mit 25hz laufen
- clipp internes error, also wenn goal von außen 5n ist und aktuell 3n -> internes goal zu erst 3.1, dann 3.2, etc. weil max goal darf nur 0.1 größer sein
- clippe den error und nicht direkt den interen error
- es sollte sich intern erhöhen, aber nicht in abhängigkeit von dem was ichh aktuell habe




- implement reconnect to realsense cam - from DREAMTEAM
def _image_thread(self):
        try:
            while not self.terminate_thread:
                try:
                    frame = self.__pipe.wait_for_frames(timeout_ms=1000)
                except RuntimeError as _:
                    # try to reconnect
                    self.__pipe.stop()
                    self._start_pipeline()
                    try:
                        frame = self.__pipe.wait_for_frames()
                    except RuntimeError as _:
                        print(f"{self.__camera_name} thread closed!")
                        self.terminate_thread = True
                        continue
                color_frame = frame.get_color_frame()
                color_frame = np.asanyarray(color_frame.get_data())
                color_frame = cv2.cvtColor(color_frame, cv2.COLOR_BGR2RGB)
                with self.lock:
                    self.__latest_img = cv2.resize(color_frame, self.__img_shape)
                    if self.__rotate_img:
                        self.__latest_img = cv2.rotate(
                            self.__latest_img, cv2.ROTATE_180
                        )
        except OpticalSensorError as ose:
            raise ose
